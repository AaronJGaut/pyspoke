#!/usr/bin/env python
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("--output-path", "-o", help="File to write to in addition to printing")
parser.add_argument("--first", "-f", action="store_true", help="Exit after echoing the first received message")
parser.add_argument("--label", "-l", help="Label to include at beginning of each output")
parser.add_argument("channel", nargs="*", default=["**"])
args = parser.parse_args()

import sys
import asyncio
import atexit
import spoke
import signal

if args.output_path:
    ostream = open(args.output_path, "w")
else:
    ostream = None

async def echo(msg):
    if args.label:
        output = "[{}] {}: {}\n".format(args.label, msg.channel, msg.body)
    else:
        output = "{}: {}\n".format(msg.channel, msg.body)
    print(output, end="")
    if ostream:
        ostream.write(output)
    if args.first:
        signal.raise_signal(signal.SIGTERM)

async def main():
    client = spoke.pubsub.client.Client()
    await client.run()
    await asyncio.gather(*[client.subscribe(x, echo, bounce=False) for x in args.channel])
    await spoke.wait.wait()
    if ostream:
        ostream.close()

asyncio.run(main())
